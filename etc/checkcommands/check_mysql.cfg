define command {
        command_name    check_mysql
        command_line    $USER1$/check_mysql -u nagios -p guest -H $HOSTADDRESS$
}

define command {
        command_name    check_mysql_agent
        command_line    $USER1$/colo-agent-status.ksh
}

define command {
        command_name    check_mysql_simulscribe_pending
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d asp_production -q "select count(*) from pending_activity where capability != 'episode_monitoring'" -c 20
}


define command {
        command_name    check_mysql_periodic_publish_agent
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select timestampdiff(second,state_time,now()) from agent where specialty ='periodic_publish' and in_rotation" -c 300
}

define command {
        command_name    check_mysql_indexer_agent_status
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "SELECT count(*) from agent where in_rotation = 1 and instance_name rlike 'regression' and timestampdiff(minute,state_time,now()) > 30" -c 0
}

define command {
        command_name    check_mysql_crawler_agent_status
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "SELECT count(*) from agent where in_rotation = 1 and role = 'discovery_crwler' and timestampdiff(minute,state_time,now()) > 30" -c 0
}

define command {
        command_name    check_mysql_item_processing
	command_line	$USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select count(*) from agent where role ='process_item' and in_rotation = 1 and timestampdiff(minute,state_time,now()) > 25" -c 0
}

define command {
        command_name    check_syndication
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select count(*) from pending_activity where role = 'syndicate' and priority < 60 and start_not_before_time < now()" -c 200
}


define command {
        command_name    check_mysql_downloading
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select count(*) from (select count(*) "count", timestampdiff(minute,state_time,now()) "duration" from agent where role = 'download' and in_rotation = 1  group by duration having count > 15 and duration > 29 or count > 0 and duration > 120) t" -c 0
}

define command {
        command_name    check_mysql_streamer
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select unix_timestamp(now()) - unix_timestamp(i.created_time) > 3600 from item i join source s on i.source_id=s.id and s.origin_type='stream_capture' order by i.id desc limit 1" -c 0
}

define command {
        command_name    check_transcribers_stale
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d stx_cloud_production -q "SELECT  count(t.id) FROM cloud_member m join cloud_transcriber t on t.member_id = m.id and t.instance < m.size where m.state = 'running' and ((unix_timestamp(now()) - unix_timestamp(t.state_time)) > 3600)" -c 15
}

# check for number of stx transcribers
define command {
        command_name    check_cloud_transcribers_number
        command_line    $USER1$/check_mysql -u nagios -p guest -H $HOSTADDRESS$ -d stx_cloud_production "select if(count(cm.id)>=90,'pass','fail') from cloud_transcriber ct inner join cloud_member cm on cm.id = ct.member_id and cm.state='running' ct.member_id and cm.state='running' and time_to_sec(timediff(now(),cm.state_time)) < 3600" -c 15
}

define command {
        command_name    check_pending_cache_vp6
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select count(*) from pending_activity where specialty = 'cache_vp6' and priority < 50" -c 30
}

define command {
        command_name    check_mysql_slave
        command_line    $USER1$/check_mysql --check-slave -u nagiosslave -p guest -H $HOSTADDRESS$
}

define command {
  command_name  check_mysql_slave_restart
  command_line  $USER1$/check_mysql_slave_restart.ksh $HOSTADDRESS$
}
define command {
  command_name  check_mysql_slave_colo-db-05
  command_line  $USER1$/check_mysql_db05.pl -master prod-write --slave colo-db-05 --dbuser nagiosslave --dbpass guest
}


define command {
        command_name    check_streamer_health
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d stx_cloud_production -q "select count(*) from (select sum(least(time_to_sec(timediff(cu.end_time,cu.start_time)),1800))+count(cu.start_time)*3 as tot_secs from cloud_usage cu where cu.end_time > subtime(now(),'0:30:00') and cu.start_time > subtime(now(),'8:00:00') and cu.state = 'transcribed') as tot_time where tot_secs < 35000 " -c 1
        }

define command {
  	command_name 	check_transcrib_reco_and_align

command_line 	$USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select count(*) from (select s.name as site,src.priority as initial_priority,i.duration,time_to_sec(timediff(now(),a.started_time)) as transcribing_for_secs,round(time_to_sec(timediff(now(),a.started_time)) / greatest(ifnull(i.duration,1),2700),2) as wait_factor,a.started_time,src.stx_model_name,a.specialty,i.id as item_id,a.assignment_id as assignment_id from activity a inner join item_assignment_detail iad on a.assignment_id = iad.assignment_id inner join item2 i on i.id = iad.item_id inner join site s on s.id = i.site_id inner join source2 src on src.id = i.source_id where a.state='started' and a.role='transcribe' and i.duration having wait_factor > 2.0 order by initial_priority asc,wait_factor desc) as count_issues" -c 1
        }

define command {
        command_name    check_backed_up_trans_queue
        command_line    $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "SELECT  count(*) FROM pending_activity where specialty = 'transribe_recognize' and priority < 50" -c 40
}
define command{
        command_name  	check_agent_host_fail
        command_line 	$USER1$/check_agent_host_fail.ksh
}

define command{
        command_name  check_youtube_crawler
        command_line $USER1$/check_mysql_query -u nagios -p guest -H $HOSTADDRESS$ -d production -q "select if(count(i.id)<1,1,0) from crawler c join source2 s on s.crawler_id = c.id and s.feed_state = 'active' join item2 i on i.source_id = s.id and i.processing_state = 'completed' and i.id > (select max(id) - 100000 from item2) and unix_timestamp(now()) - unix_timestamp(i.created_time) < 86400 where c.name rlike 'youtube'" -c 0
}

define command{
                                command_name  check_processing_degraded
                                command_line $USER1$/colo-mysql-item-processing-degraded.ksh
}
define command{
                                command_name  check_agents_failed_startup
                                command_line $USER1$/check_agents_failed_startup.ksh
}
define command{
                                command_name  check_api_agent
                                command_line $USER1$/check_api_agent.ksh
}
define command {
                                command_name  check_cloud_health
                                command_line  $USER1$/check_cloud_health.ksh
}
define command{
                                command_name  check_pending_items
                                command_line $USER1$/colo-mysql-pending.ksh
}
define command{
                                command_name  check_processlist
                                command_line $USER1$/check_processlist.ksh
}
define command{
                                command_name  check_pendingactivity
                                command_line $USER1$/check_pendingactivity.ksh
}

define command{
                                command_name  check_number_cloud_workers
                                command_line $USER1$/check_cloud_worker.ksh
}

